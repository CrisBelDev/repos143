package holamundo;

public class holamundo {
	public static int metodo1(int a ,int b) { //1
		int s =0;								// 1
		for (int i = a;i<=b;i++) {				//b-a+2
			s = s+i;							// b-a+1
		}
		return s;								//1
		//									------------------
		//										t(a,b) = 2b - 2a + 6 
		//											   = 2(b-a+1) + 4
		// si b-a+1 = n  --> entonces --> O(n)
	}
	public static int metodo2(int a ,int b) { //1
		int s =0;								// 1
		int i =a;								// 1
		int t = 0;
		while(i<=b) {							//b-a+2
			s = s+i;							//b-a+1
			i++;								//b-a+1
			t++;
		}
		System.out.println(a+" "+b + " "+ t);
		return s;								// 1
		//							--------------------------
		//								t(a,b) = 3b-3a +8
		// 									   = 3(b - a+1) + 5
		//									   = 3 n + 5
		// si b-a+1 = n --> entonces --> O(n)
	}
	public static int metodo3 (int ini, int fin) { //1
		
		return ((fin + ini) * (fin + 1 - ini)) / 2; // 1
		//										----------
		//										t(n) = 2
		// asi la complejidad es O(1)
	}
	// 1. obtenga el minimo elemento del vector y luego obtenga la complejidad
	public static int obt_min_elem(int v[] ) { //1
		int min = 99999;						// 1
		
		for (int i =0;i<v.length;i++) {			// n
			if(v [i] < min ) {					//n-1
				min = v [i]; 					//n-1
			}
		}
		return min; //1
		// 									-------------
		//									t(n) = 3n+1 --> entonces -->pertenece O(n)	
	}
	public static void main(String args[]){
		
			metodo2(3, 6);
			System.out.println(metodo3(3, 6));
		}
	// 3 +4 +5 +6
	/*
		a	b	s	i	salida
		3	6	0	(3)		18
				3	(4)
				7	(5)
				12	(6)
				18	7
	 
	*/
}
